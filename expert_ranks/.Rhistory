runApp('draft_dashboard')
runApp('draft_dashboard')
i <- 3
round <- 0
picks <- c()
for (n in seq(1:14)){
if (round %% 2 != 0){
picks[n] == (round * 12) + 3
}
else{
picks[n] == picks[n -1 ] + 2(12-i)
}
}
i <- 3
round <- 0
picks <- c()
for (n in seq(1:14)){
if (round %% 2 != 0){
picks[n] == (round * 12) + 3
}
else{
picks[n] == picks[n - 1] + 2*(12-i)
}
}
i <- 3
round <- 0
picks <- c()
for (n in seq(1:14)){
if (round %% 2 != 0){
picks[n] == (round * 12) + 3
round <- round + 1
}
else{
picks[n] == picks[n - 1] + 2*(12-i)
round <- round + 1
}
}
round %% 2
round %% 2 != 0
i <- 3
round <- 0
picks <- c()
for (n in seq(1:14)){
if (round %% 2 != 0){
picks[n] <- (round * 12) + 3
round <- round + 1
}
else{
picks[n] <- picks[n - 1] + 2*(12-i)
round <- round + 1
}
}
i <- 3
round <- 0
picks <- c()
for (n in seq(0:14)){
if (round %% 2 != 0){
picks[n] <- (round * 12) + 3
round <- round + 1
}
else{
picks[n] <- picks[n - 1] + 2*(12-i)
round <- round + 1
}
}
i <- 3
round <- 1
picks <- c()
for (n in seq(1:14)){
if (round %% 2 != 0){
picks[n] <- ((round-1) * 12) + 3
round <- round + 1
}
else{
picks[n] <- picks[n - 1] + 2*(12-i)
round <- round + 1
}
}
i <- 4
round <- 1
picks <- c()
for (n in seq(1:14)){
if (round %% 2 != 0){
picks[n] <- ((round-1) * 12) + 3
round <- round + 1
}
else{
picks[n] <- picks[n - 1] + 2*(12-i)
round <- round + 1
}
}
i <- 4
round <- 1
picks <- c()
for (n in seq(1:14)){
if (round %% 2 != 0){
picks[n] <- ((round-1) * 12) + i
round <- round + 1
}
else{
picks[n] <- picks[n - 1] + 2*(12-i)
round <- round + 1
}
}
i <- 6
round <- 1
picks <- c()
for (n in seq(1:14)){
if (round %% 2 != 0){
picks[n] <- ((round-1) * 12) + i
round <- round + 1
}
else{
picks[n] <- picks[n - 1] + 2*(12-i)
round <- round + 1
}
}
runApp('draft_dashboard')
runApp('draft_dashboard')
runApp('draft_dashboard')
runApp('draft_dashboard')
runApp('draft_dashboard')
runApp('draft_dashboard')
runApp('draft_dashboard')
runApp('draft_dashboard')
runApp('draft_dashboard')
runApp('draft_dashboard')
runApp('draft_dashboard')
runApp('draft_dashboard')
runApp('draft_dashboard')
runApp('draft_dashboard')
runApp('draft_dashboard')
runApp('draft_dashboard')
runApp('draft_dashboard')
runApp('draft_dashboard')
runApp('draft_dashboard')
runApp('draft_dashboard')
runApp('draft_dashboard')
runApp('draft_dashboard')
runApp('draft_dashboard')
runApp('draft_dashboard')
runApp('draft_dashboard')
runApp('draft_dashboard')
runApp('draft_dashboard')
runApp('draft_dashboard')
runApp('draft_dashboard')
df <- dplyr :: arrange(df, points)
runApp('draft_dashboard')
?arrange
runApp('draft_dashboard')
runApp('draft_dashboard')
runApp('draft_dashboard')
runApp('draft_dashboard')
runApp('draft_dashboard')
runApp('draft_dashboard')
runApp('draft_dashboard')
runApp('draft_dashboard')
runApp('draft_dashboard')
runApp('draft_dashboard')
runApp('draft_dashboard')
runApp('draft_dashboard')
runApp('draft_dashboard')
runApp('draft_dashboard')
runApp('draft_dashboard')
?reactiveVal
runApp('draft_dashboard')
runApp('draft_dashboard')
runApp('draft_dashboard')
runApp('draft_dashboard')
runApp('draft_dashboard')
runApp('draft_dashboard')
runApp('draft_dashboard')
runApp('draft_dashboard')
runApp('draft_dashboard')
runApp('draft_dashboard')
runApp('draft_dashboard')
runApp('draft_dashboard')
runApp('draft_dashboard')
runApp('draft_dashboard')
runApp('draft_dashboard')
runApp('draft_dashboard')
runApp('draft_dashboard')
# Define UI for application that draws a histogram
ui <- fluidPage(
# Application title
titlePanel("Fantasy Draft Dashboard"),
# Sidebar with a slider input for number of bins
sidebarLayout(
sidebarPanel(
numericInput("draft_pick", label = h3("Select Draft Pick"), value = 1, min = 1, max = 12),
textOutput("pick_list"),
uiOutput("drafted")
),
# Show a plot of the generated distribution
mainPanel(
DT :: dataTableOutput("main_tab"),
?tag
DT :: dataTableOutput("main_tab")
)
)
)
runApp('draft_dashboard')
runApp('draft_dashboard')
runApp('draft_dashboard')
runApp('draft_dashboard')
runApp('draft_dashboard')
runApp('draft_dashboard')
runApp('draft_dashboard')
runApp('draft_dashboard')
drafted <- df[0,]
View(drafted)
runApp('draft_dashboard')
runApp('draft_dashboard')
runApp('draft_dashboard')
runApp('draft_dashboard')
runApp('draft_dashboard')
runApp('draft_dashboard')
runApp('draft_dashboard')
runApp('draft_dashboard')
runApp('draft_dashboard')
runApp('draft_dashboard')
runApp('draft_dashboard')
runApp('draft_dashboard')
runApp('draft_dashboard')
runApp('draft_dashboard')
runApp('draft_dashboard')
runApp('draft_dashboard')
runApp('draft_dashboard')
runApp('draft_dashboard')
runApp('draft_dashboard')
runApp('draft_dashboard')
runApp('draft_dashboard')
runApp('draft_dashboard')
setwd("C:/Users/montg/Documents/active_projects/fantasy_football/expert_ranks")
library(dplyr)
file_names <- dir()
df <- do.call(rbind,lapply(file_names,read.csv))
player_list <- unique(df$Overall)
player_dist <- list()
player_fun <- list()
best <- c()
worst<- c()
a <- 1
for (i in player_list){
best[a] <- df %>% filter (Overall == i) %>% select(Best)
worst[a] <- df %>% filter (Overall == i) %>% select(Worst)
player_dist[[i]] <- c(worst[[a]], best[[a]])
# player_fun <- approxfun(player_dist[a], rule = 2)
a <- a + 1
}
write.csv(player_list, "../player_list.csv")
save(player_dist, file = "../player_distributions.RData")
View(df)
player_names <- unique(Overall)
player_names <- unique(df$Overall)
View(df)
library("ffanalytics")
my_scrape <- scrape_data(
pos = c("QB", "RB", "WR", "TE", "DST"),
season = 2019, week = 0)
my_projections <- projections_table(my_scrape)
player_names <- player_table %>% select(id, last_name, first_name, position) %>% rename(pos = position)
my_projections <- merge(my_projections, player_names)
my_projections <- my_projections %>% select(last_name,first_name, pos, id, points, rank, pos_rank, sd_pts, avg_type ) %>%
filter (avg_type == "robust")
write.csv(my_projections, "projections.csv")
library("ffanalytics")
my_scrape <- scrape_data(
pos = c("QB", "RB", "WR", "TE", "DST"),
season = 2019, week = 0)
my_projections <- projections_table(my_scrape)
player_names <- player_table %>% select(id, last_name, first_name, position) %>% rename(pos = position)
my_projections <- merge(my_projections, player_names)
my_projections <- my_projections %>% select(last_name,first_name, pos, id, points, rank, pos_rank, sd_pts, avg_type ) %>%
filter (avg_type == "robust")
write.csv(my_projections, "projections.csv")
library("ffanalytics", lib.loc="~/R/win-library/3.5")
detach("package:ffanalytics", unload=TRUE)
library("ffanalytics")
View(player_table)
my_scrape <- scrape_data(
pos = c("QB", "RB", "WR", "TE", "DST"),
season = 2019, week = 0)
my_projections <- projections_table(my_scrape)
player_names <- player_table %>% select(id, last_name, first_name, position) %>% rename(pos = position)
my_projections <- merge(my_projections, player_names)
my_projections <- my_projections %>% select(last_name,first_name, pos, id, points, rank, pos_rank, sd_pts, avg_type ) %>%
filter (avg_type == "robust")
write.csv(my_projections, "projections.csv")
library("ffanalytics")
my_scrape <- scrape_data(
pos = c("QB", "RB", "WR", "TE", "DST"),
season = 2019, week = 0)
my_projections <- projections_table(my_scrape)
player_names <- player_table %>% select(id, last_name, first_name, position) %>% rename(pos = position)
my_projections <- merge(my_projections, player_names)
View(my_projections)
View(my_projections)
setwd("C:/Users/montg/Documents/active_projects/fantasy_football/expert_ranks")
library(dplyr)
file_names <- dir()
df <- do.call(rbind,lapply(file_names,read.csv))
player_list <- unique(df$Overall)
player_dist <- list()
player_fun <- list()
best <- c()
worst<- c()
a <- 1
for (i in player_list){
best[a] <- df %>% filter (Overall == i) %>% select(Best)
worst[a] <- df %>% filter (Overall == i) %>% select(Worst)
player_dist[[i]] <- c(worst[[a]], best[[a]])
# player_fun <- approxfun(player_dist[a], rule = 2)
a <- a + 1
}
write.csv(player_list, "../player_list.csv")
save(player_dist, file = "../player_distributions.RData")
setwd("C:/Users/montg/Documents/active_projects/fantasy_football/expert_ranks")
library(dplyr)
file_names <- dir()
df <- do.call(rbind,lapply(file_names,read.csv))
player_list <- unique(df$Overall)
player_dist <- list()
player_fun <- list()
best <- c()
worst<- c()
a <- 1
for (i in player_list){
best[a] <- df %>% filter (Overall == i) %>% select(Best)
worst[a] <- df %>% filter (Overall == i) %>% select(Worst)
player_dist[[i]] <- c(worst[[a]], best[[a]])
# player_fun <- approxfun(player_dist[a], rule = 2)
a <- a + 1
}
write.csv(player_list, "../player_list.csv")
save(player_dist, file = "../player_distributions.RData")
player_names()
player_names
View(df)
View(my_projections)
my_projections <- my_projections %>% select(last_name,first_name, pos, id, points, rank, pos_rank, sd_pts, avg_type ) %>%
filter (avg_type == "robust")
View(my_projections)
proj_names <- unique(my_projects[,"last_name", "first_name"])
proj_names <- unique(my_projections[,"last_name", "first_name"])
proj_names <- (my_projections[,"last_name", "first_name"])
proj_names <- unique(my_projections[,c("last_name", "first_name")])
proj_names$name <- paste(my_projections$first_name, my_projections$last_name, sep = " ")
my_projections <- na.omit(my_projections)
proj_names$name <- paste(my_projections$first_name, my_projections$last_name, sep = " ")
View(proj_names)
proj_names <- unique(my_projections[,c("last_name", "first_name")])
proj_names$name <- paste(my_projections$first_name, my_projections$last_name, sep = " ")
my_projections <- na.omit(my_projections)
proj_names <- unique(my_projections[,c("last_name", "first_name")])
proj_names$name <- paste(my_projections$first_name, my_projections$last_name, sep = " ")
length(my_projections$first_name)
length(my_projections$last_name)
proj_names$name <- paste(my_projections$first_name, my_projections$last_name, sep = " ")
length(paste(my_projections$first_name, my_projections$last_name, sep = " "))
proj_names$name <- paste(proj_names$first_name, proj_names$last_name, sep = " ")
View(proj_names)
View(proj_names)
test <- proj_names[proj_names$name %in% player_list,]
my_projections$name <- paste(my_projections$first_name, my_projections$last_name, sep = " ")
test <- my_projections[my_projections %in% player_list,]
test2 <-  my_projections[!(my_projections %in% player_list),]
test <- my_projections[my_projections$name %in% player_list,]
test2 <-  my_projections[!(my_projections$name %in% player_list),]
View(test)
View(test2)
require("tm")
install.packages("tm")
library("tm")
stopwords <- c("Jr.")
player_list <- removeWords(player_list,stopwords)
test <- my_projections[my_projections$name %in% player_list,]
test2 <-  my_projections[!(my_projections$name %in% player_list),]
nrow(test) - length(player_list)
stopwords <- c("Jr.", "II")
player_list <- removeWords(player_list,stopwords)
test <- my_projections[my_projections$name %in% player_list,]
test2 <-  my_projections[!(my_projections$name %in% player_list),]
nrow(test) - length(player_list)
player_list
?removeWords
unlist(player_list)[!(unlist(player_list) %in% stopWords)]
unlist(player_list)[!(unlist(player_list) %in% stopwords)]
gsub(x = player_list, pattern = paste(stopwords, collapse = "|"), replacement = "")
stopwords <- c("Jr.", "II")
player_list <- gsub(x = player_list, pattern = paste(stopwords, collapse = "|"), replacement = "")
test <- my_projections[my_projections$name %in% player_list,]
test2 <-  my_projections[!(my_projections$name %in% player_list),]
nrow(test) - length(player_list)
View(test2)
player_list <- unique(df$Overall)
stopwords <- c(" Jr.", " II")
player_list <- gsub(x = player_list, pattern = paste(stopwords, collapse = "|"), replacement = "")
test <- my_projections[my_projections$name %in% player_list,]
test2 <-  my_projections[!(my_projections$name %in% player_list),]
nrow(test) - length(player_list)
player_list <- unique(df$Overall)
my_projections$name <- paste(my_projections$first_name, my_projections$last_name, sep = " ")
stopwords <- c(" Jr.", " II", " III", "IV")
player_list <- gsub(x = player_list, pattern = paste(stopwords, collapse = "|"), replacement = "")
test <- my_projections[my_projections$name %in% player_list,]
test2 <-  my_projections[!(my_projections$name %in% player_list),]
nrow(test) - length(player_list)
View(test2)
my_projects$name <- gsub(x = my_prjections$name, pattern = paste(stopwords, collapse = "|"), replacement = "")
my_projects$name <- gsub(x = my_projections$name, pattern = paste(stopwords, collapse = "|"), replacement = "")
my_projections$name <- gsub(x = my_projections$name, pattern = paste(stopwords, collapse = "|"), replacement = "")
test <- my_projections[my_projections$name %in% player_list,]
test2 <-  my_projections[!(my_projections$name %in% player_list),]
nrow(test) - length(player_list)
my_projections$name <- ifelse(my_projections$pos == "DST", my_projections$last_name, my_projections$name)
gsub("\\s*\\([^\\)]+\\)","",as.character(player_list))
my_projections$name <- ifelse(my_projections$pos == "DST", my_projections$first_name, my_projections$name)
player_list <- gsub("\\s*\\([^\\)]+\\)","",as.character(player_list))
my_projections$name <- paste(my_projections$first_name, my_projections$last_name, sep = " ")
my_projections$name <- ifelse(my_projections$pos == "DST", my_projections$first_name, my_projections$name)
player_list <- gsub("\\s*\\([^\\)]+\\)","",as.character(player_list))
stopwords <- c(" Jr.", " II", " III", "IV")
player_list <- gsub(x = player_list, pattern = paste(stopwords, collapse = "|"), replacement = "")
my_projections$name <- gsub(x = my_projections$name, pattern = paste(stopwords, collapse = "|"), replacement = "")
test <- my_projections[my_projections$name %in% player_list,]
test2 <-  my_projections[!(my_projections$name %in% player_list),]
nrow(test) - length(player_list)
View(test2)
?scrape_data
library("ffanalytics")
my_scrape <- scrape_data(
pos = c("QB", "RB", "WR", "TE", "DST"),
src = c("CBS", "ESPN", "FantasyPros", "Yahoo", "NFL"),
season = 2019, week = 0)
my_projections <- projections_table(my_scrape)
player_names <- player_table %>% select(id, last_name, first_name, position) %>% rename(pos = position)
my_projections <- merge(my_projections, player_names)
my_projections <- my_projections %>% select(last_name,first_name, pos, id, points, rank, pos_rank, sd_pts, avg_type ) %>%
filter (avg_type == "robust")
write.csv(my_projections, "projections.csv")
my_projections$name <- paste(my_projections$first_name, my_projections$last_name, sep = " ")
my_projections$name <- ifelse(my_projections$pos == "DST", my_projections$first_name, my_projections$name)
player_list <- gsub("\\s*\\([^\\)]+\\)","",as.character(player_list))
stopwords <- c(" Jr.", " II", " III", "IV")
player_list <- gsub(x = player_list, pattern = paste(stopwords, collapse = "|"), replacement = "")
my_projections$name <- gsub(x = my_projections$name, pattern = paste(stopwords, collapse = "|"), replacement = "")
test <- my_projections[my_projections$name %in% player_list,]
test2 <-  my_projections[!(my_projections$name %in% player_list),]
nrow(test) - length(player_list)
View(test2)
my_projections$name <- paste(my_projections$first_name, my_projections$last_name, sep = " ")
my_projections$name <- ifelse(my_projections$pos == "DST", my_projections$first_name, my_projections$name)
player_list <- gsub("\\s*\\([^\\)]+\\)","",as.character(player_list))
stopwords <- c(" Jr.", " II", " III", "IV")
player_list <- gsub(x = player_list, pattern = paste(stopwords, collapse = "|"), replacement = "")
my_projections$name <- gsub(x = my_projections$name, pattern = paste(stopwords, collapse = "|"), replacement = "")
player_list <- sapply(player_list, toupper); player_list <- sapply(player_list, toupper)
test <- my_projections[my_projections$name %in% player_list,]
test2 <-  my_projections[!(my_projections$name %in% player_list),]
nrow(test) - length(player_list)
player_list <- sapply(player_list, toupper); my_projections$name <- sapply(my_projections$name, toupper)
my_projections$name <- paste(my_projections$first_name, my_projections$last_name, sep = " ")
my_projections$name <- ifelse(my_projections$pos == "DST", my_projections$first_name, my_projections$name)
player_list <- gsub("\\s*\\([^\\)]+\\)","",as.character(player_list))
stopwords <- c(" Jr.", " II", " III", "IV")
player_list <- gsub(x = player_list, pattern = paste(stopwords, collapse = "|"), replacement = "")
my_projections$name <- gsub(x = my_projections$name, pattern = paste(stopwords, collapse = "|"), replacement = "")
player_list <- sapply(player_list, toupper); my_projections$name <- sapply(my_projections$name, toupper)
test <- my_projections[my_projections$name %in% player_list,]
test2 <-  my_projections[!(my_projections$name %in% player_list),]
nrow(test) - length(player_list)
View(test2)
View(test2)
stopwords <- c(" Jr.", " II", " III", " IV")
player_list <- gsub(x = player_list, pattern = paste(stopwords, collapse = "|"), replacement = "")
my_projections$name <- gsub(x = my_projections$name, pattern = paste(stopwords, collapse = "|"), replacement = "")
player_list <- sapply(player_list, toupper); my_projections$name <- sapply(my_projections$name, toupper)
test <- my_projections[my_projections$name %in% player_list,]
test2 <-  my_projections[!(my_projections$name %in% player_list),]
nrow(test) - length(player_list)
View(test2)
player_list <- unique(df$Overall)
my_projections$name <- paste(my_projections$first_name, my_projections$last_name, sep = " ")
my_projections$name <- ifelse(my_projections$pos == "DST", my_projections$first_name, my_projections$name)
player_list <- gsub("\\s*\\([^\\)]+\\)","",as.character(player_list))
stopwords <- c(" Jr.", " II", " III", " IV")
player_list <- gsub(x = player_list, pattern = paste(stopwords, collapse = "|"), replacement = "")
my_projections$name <- gsub(x = my_projections$name, pattern = paste(stopwords, collapse = "|"), replacement = "")
player_list <- sapply(player_list, toupper); my_projections$name <- sapply(my_projections$name, toupper)
test <- my_projections[my_projections$name %in% player_list,]
test2 <-  my_projections[!(my_projections$name %in% player_list),]
nrow(test) - length(player_list)
View(test2)
View(test)
View(test2)
library("ffanalytics")
my_scrape <- scrape_data(
pos = c("QB", "RB", "WR", "TE", "DST"),
src = c("CBS", "ESPN", "FantasyPros", "Yahoo", "NFL"),
season = 2019, week = 0)
my_projections <- projections_table(my_scrape)
player_names <- player_table %>% select(id, last_name, first_name, position) %>% rename(pos = position)
my_projections <- merge(my_projections, player_names)
my_projections <- my_projections %>% select(last_name,first_name, pos, id, points, rank, pos_rank, sd_pts, avg_type ) %>%
filter (avg_type == "robust")
stopwords <- c(" Jr.", " II", " III", " IV")
my_projections$name <- paste(my_projections$first_name, my_projections$last_name, sep = " ")
my_projections$name <- ifelse(my_projections$pos == "DST", my_projections$first_name, my_projections$name)
my_projections$name <- gsub(x = my_projections$name, pattern = paste(stopwords, collapse = "|"), replacement = "")
my_projections$name <- ifelse(my_projections$name == "MITCHELL TRUBISKY", "MITCH TRUBISKY", my_projections$name)
write.csv(my_projections, "projections.csv")
